containers:
  build-env:
    build_directory: .batect/build-env
    volumes:
      - local: .
        container: /code
        options: cached
      - local: .go-cache
        container: /go
        options: delegated
    working_directory: /code
    environment:
      GOCACHE: /go/cache
    run_as_current_user:
      enabled: true
      home_directory: /home/container-user

  terraform:
    build_directory: .batect/terraform
    volumes:
      - local: .
        container: /code
        options: cached
      - local: .gcloud
        container: /root/.config/gcloud
        options: cached
    working_directory: /code
    environment:
      GOOGLE_PROJECT: batect-abacus
      GOOGLE_REGION: us-west2
      GOOGLE_BILLING_ACCOUNT_ID: 011BAD-787BE0-783C44

  app:
    build_directory: .batect/app
    environment:
      PORT: 8080

tasks:
  setup:
    description: Download all dependencies used by the application.
    group: Setup tasks
    run:
      container: build-env
      command: sh -c 'go mod download && go get github.com/onsi/ginkgo/ginkgo'

  build:
    description: Build the application.
    group: Build tasks
    run:
      container: build-env
      command: go build -o .batect/app/abacus ./server/cmd
      environment:
        CGO_ENABLED: 0
        GOOS: linux

  unitTest:
    description: Run the unit tests.
    group: Test tasks
    run:
      container: build-env
      command: ginkgo -tags unitTests -race -coverprofile=coverage.txt -covermode=atomic server/...

  continuousUnitTest:
    description: Run the unit tests, and re-run them when any code changes are detected.
    group: Test tasks
    run:
      container: build-env
      command: ginkgo watch -tags unitTests -race server/...

  journeyTest:
    description: Run the journey tests.
    group: Test tasks
    prerequisites:
      - build
    dependencies:
      - app
    run:
      container: build-env
      command: ginkgo -tags journeyTests server/...

  shell:
    description: Start a shell in the development environment.
    group: Utility tasks
    run:
      container: build-env
      command: bash

  run:
    description: Run the application.
    group: Test tasks
    prerequisites:
      - build
    run:
      container: app
      ports:
        - local: 8080
          container: 8080

  lint:
    description: Check for linting errors.
    group: Linting tasks
    run:
      container: build-env
      command: golangci-lint run --enable-all --build-tags unitTests --build-tags journeyTests server/...

  lintFix:
    description: Fix linting errors.
    group: Linting tasks
    run:
      container: build-env
      command: golangci-lint run --enable-all --build-tags unitTests --build-tags journeyTests --fix server/...

  update:
    description: Update to latest minor or patch update of all dependencies.
    group: Dependency management tasks
    run:
      container: build-env
      command: sh -c 'go get -u && go mod tidy'

  setup-terraform:
    description: Initialise Terraform.
    group: Infrastructure management tasks
    run:
      container: terraform
      command: infra/scripts/initialize.sh

  apply-terraform:
    description: Run Terraform to provision infrastructure.
    group: Infrastructure management tasks
    run:
      container: terraform
      command: terraform apply -input=false -auto-approve infra/tf

  destroy-terraform:
    description: Run Terraform to provision infrastructure.
    group: Infrastructure management tasks
    run:
      container: terraform
      command: terraform destroy -input=false -auto-approve infra/tf

  terraform-shell:
    description: Start a shell in the Terraform environment.
    group: Infrastructure management tasks
    run:
      container: terraform
      command: bash

  gcp-login-personal:
    description: Login to GCP using your personal credentials.
    group: Infrastructure management tasks
    run:
      container: terraform
      command: sh -c "gcloud auth login && gcloud auth application-default login"

  gcp-login-service-account:
    description: Login to GCP using your personal credentials.
    group: Infrastructure management tasks
    run:
      container: terraform
      command: infra/scripts/login.sh
      environment:
        GCP_SERVICE_ACCOUNT_EMAIL: $GCP_SERVICE_ACCOUNT_EMAIL
        GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY
